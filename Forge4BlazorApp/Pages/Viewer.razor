@page "/viewer/{urn64}/{uri64}"

@inject ForgeApiService ForgeApiService;


<div class="container-fluid d-flex h-100">
    <div class="flex-fill bg-warning">
        <h1>Viewer Move: (@x1, @y1) Clicked: (@Math.Round(x1c, 2), @Math.Round(y1c, 2)) SnapperClicked: (@Math.Round(x1s, 2), @Math.Round(y1s, 2))</h1>
        <input type="checkbox" @bind="snapIsOn" />Snap
        <ForgeViewerComponent OnViewerInitializedCallback="GetViewer" id="id1" UseSnapper="snapIsOn"
                              style="position: relative; height: calc(100% - 100px); width: calc(100% - 0px);">

        </ForgeViewerComponent>
    </div>
</div>


@code {

    [Parameter]
    public string urn64 { get; set; }
    [Parameter]
    public string uri64 { get; set; }

    public string uri
    {
        get
        {
            return System.Text.Encoding.UTF8.GetString(Convert.FromBase64String(uri64));
        }
    }

    bool snapIsOn { get; set; }

    ForgeViewer myViewer { get; set; }

    private void GetViewer(ForgeViewer aViewer)
    {
        myViewer = aViewer;
    }


    protected override async Task OnInitializedAsync()
    {
    }

    protected override async Task OnParametersSetAsync()
    {

        JObject manifestJObject = await ForgeApiService.GetManifestAsync(urn64);
        var manifestTxt = Newtonsoft.Json.JsonConvert.SerializeObject(manifestJObject, Newtonsoft.Json.Formatting.Indented);

        snapIsOn = false;
        await myViewer.Start();

        if (manifestJObject == null && uri.ToLower().EndsWith("pdf"))
        {
            await myViewer.LoadExtensionAsync("Autodesk.PDF");
            await myViewer.LoadFileAsync(uri);
        }
        else
        {
            await myViewer.LoadDocumentAsync($"urn:{urn64}");
            await myViewer.LoadNode();
        }

        await myViewer.AddMouseMoveEvent();
        await myViewer.AddMouseClickEvent();

        myViewer.XYChanged += OnMouseChangeAsync;
        myViewer.XYClicked += OnMouseClickedAsync;
        myViewer.XYSnapperClicked += OnMouseSnapperClickedAsync;


    }

    double x1 { get; set; }
    double y1 { get; set; }
    private async void OnMouseChangeAsync(object sender, Tuple<double, double> aXY)
    {
        x1 = aXY.Item1;
        y1 = aXY.Item2;
        StateHasChanged();
    }

    double x1c { get; set; }
    double y1c { get; set; }
    private async void OnMouseClickedAsync(object sender, Tuple<double, double> aXY)
    {
        x1c = aXY.Item1;
        y1c = aXY.Item2;
        StateHasChanged();
    }

    double x1s { get; set; }
    double y1s { get; set; }
    private async void OnMouseSnapperClickedAsync(object sender, Tuple<double, double> aXY)
    {
        x1s = aXY.Item1;
        y1s = aXY.Item2;
        StateHasChanged();
    }

}