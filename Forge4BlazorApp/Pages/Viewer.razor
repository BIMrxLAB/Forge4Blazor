@page "/viewer"

@using Forge4BlazorRCL;
@inject Forge4BlazorRCL.ForgeApiService ForgeApiService;
@using Microsoft.Extensions.Configuration
@inject IConfiguration Configuration

<div class="container-fluid d-flex h-100">
    <div class="flex-fill bg-warning">
        <h1>Viewer1 (@x1, @y1)</h1> <button @onclick="toggleViewer">Toggle</button>
        <ForgeViewerComponent id="id1" style="position: relative; height: calc(50% - 100px); width: calc(100% - 0px);"
                              urn="@urn1" file="@file1" XYChanged="(Func<Tuple<double, double>, Task>)OnXYChange1">

        </ForgeViewerComponent>
        <h1>Viewer2 (@x2, @y2)</h1> <button @onclick="toggleViewer">Toggle</button>
        <ForgeViewerComponent id="id2" style="position: relative; height: calc(50% - 100px); width: calc(100% - 0px);"
                              urn="@urn2" file="@file2" XYChanged="(Func<Tuple<double, double>, Task>)OnXYChange2">

        </ForgeViewerComponent>
    </div>
</div>


@code {
    double x1 { get; set; }
    double y1 { get; set; }

    string urn1 = null;
    string file1 = null;

    double x2 { get; set; }
    double y2 { get; set; }

    string urn2 = null;
    string file2 = null;

    private void toggleViewer()
    {
        urn1 = urn1 == null ? Configuration.GetValue<string>("Forge:SampleUrn") : null;
        file1 = file1 == null ? "pdfs/bldg_8_2.pdf" : null;

        urn2 = urn2 == null ? Configuration.GetValue<string>("Forge:SampleUrn") : null;
        file2 = file2 == null ? "pdfs/bldg_8_2.pdf" : null;
    }

    protected override async Task OnInitializedAsync()
    {
        file2 = "pdfs/bldg_8_2.pdf";
        urn1 = Configuration.GetValue<string>("Forge:SampleUrn");

        ForgeApiService.SetClientIdAndSecret(Configuration.GetValue<string>("Forge:ClientId"), Configuration.GetValue<string>("Forge:ClientSecret"));

    }


    async Task OnXYChange1(Tuple<double, double> aXY)
    {
        this.x1 = aXY.Item1;
        this.y1 = aXY.Item2;
    }

    async Task OnXYChange2(Tuple<double, double> aXY)
    {
        this.x2 = aXY.Item1;
        this.y2 = aXY.Item2;
    }
}