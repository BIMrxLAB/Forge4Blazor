@page "/viewer2"

@using Forge4BlazorRCL;
@inject Forge4BlazorRCL.ForgeApiService ForgeApiService;

@using Microsoft.Extensions.Configuration
@inject IConfiguration Configuration

<div class="container-fluid d-flex h-100">
    <div class="flex-fill bg-warning">
        <h1>Viewer1 Move: (@x1, @y1) Clicked: (@Math.Round(x1c, 2), @Math.Round(y1c, 2)) SnapperClicked: (@Math.Round(x1s, 2), @Math.Round(y1s, 2))</h1><button @onclick="go">load model</button>
        <input type="checkbox" @bind="snapIsOn" />Snap
        <ForgeViewerComponent OnViewerInitializedCallback="GetViewer" id="id1" 
                              style="position: relative; height: calc(100% - 100px); width: calc(100% - 0px);"
                              >

        </ForgeViewerComponent>
    </div>
</div>


@code {

    ForgeViewer myViewer { get; set; }

    protected override async Task OnInitializedAsync()
    {
        ForgeApiService.SetClientIdAndSecret(Configuration.GetValue<string>("Forge:ClientId"), Configuration.GetValue<string>("Forge:ClientSecret"));
    }

    private void GetViewer(ForgeViewer aViewer)
    {
        myViewer = aViewer;
    }

    bool _snapIsOn;
    bool snapIsOn
    {
        get
        {
            return _snapIsOn;
        }
        set
        {
            if (value != _snapIsOn)
            {
                _snapIsOn = value;
                OnSnapChange();
            }
        }
    }

    async Task OnSnapChange()
    {
        if (snapIsOn)
        {
            await myViewer.MakeSnapper();
            await myViewer.RegisterAndActivateSnapper();
        }
        else
        {
            await myViewer.DestroySnapper();
            await myViewer.DeregisterAndDeactivateSnapper();

        }
    }


    private async Task go()
    {
        await myViewer.Start();

        await myViewer.LoadExtensionAsync("Autodesk.PDF");
        await myViewer.LoadExtensionAsync("Autodesk.Snapping");

        await myViewer.LoadModelAsync("pdfs/bldg_8_2.pdf");


        await myViewer.AddMouseMoveEvent();
        await myViewer.AddMouseClickEvent();
        myViewer.XYChanged += OnMouseChangeAsync;
        myViewer.XYClicked += OnMouseClickedAsync;
        myViewer.XYSnapperClicked += OnMouseSnapperClickedAsync;
    }

    double x1 { get; set; }
    double y1 { get; set; }
    private async void OnMouseChangeAsync(object sender, Tuple<double, double> aXY)
    {
        x1 = aXY.Item1;
        y1 = aXY.Item2;
        StateHasChanged();
    }

    double x1c { get; set; }
    double y1c { get; set; }
    private async void OnMouseClickedAsync(object sender, Tuple<double, double> aXY)
    {
        x1c = aXY.Item1;
        y1c = aXY.Item2;
        StateHasChanged();
    }

    double x1s { get; set; }
    double y1s { get; set; }
    private async void OnMouseSnapperClickedAsync(object sender, Tuple<double, double> aXY)
    {
        x1s = aXY.Item1;
        y1s = aXY.Item2;
        StateHasChanged();
    }

}