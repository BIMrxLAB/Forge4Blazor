@inject Forge4BlazorRCL.ForgeApiService ForgeApiService;
@inject IJSRuntime JSRuntime;

<div id="@id" style="@style">
</div>
@code {

    [Parameter]
    public string style { get; set; }

    [Parameter]
    public string id { get; set; }

    [Parameter]
    public EventCallback<ForgeViewer> OnViewerInitializedCallback { get; set; }

    private ForgeViewer Viewer { get; set; }

    protected override async Task OnInitializedAsync()
    {
        Viewer = new ForgeViewer(JSRuntime, id, ForgeApiService);
        await OnViewerInitializedCallback.InvokeAsync(Viewer);
    }

    //public async Task AddMouseMoveEvent()
    //{
    //    var dotNetReference = DotNetObjectReference.Create(this);
    //    await JSRuntime.InvokeVoidAsync("forgeViewerJsFunctions.addMouseMoveEvent", new object[] { dotNetReference, id });
    //}

    [Parameter] public EventCallback<Tuple<double, double>> XYChanged { get; set; }


    ////https://blazor-university.com/javascript-interop/calling-dotnet-from-javascript/
    //[JSInvokable("PostMouseLocation")]
    //public void PostMouseLocation(double x, double y)
    //{
    //    XYChanged.InvokeAsync(new Tuple<double, double>(x, y));
    //}

}
